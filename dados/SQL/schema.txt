-- schema.sql
-- Criação das tabelas para o sistema de contabilidade

-- Tabela para papéis (roles)
CREATE TABLE IF NOT EXISTS roles (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT UNIQUE NOT NULL,
    description TEXT
);

-- Tabela para usuários (users)
CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT UNIQUE NOT NULL,
    password_hash TEXT NOT NULL,
    role_id INTEGER NOT NULL,
    name TEXT,
    email TEXT UNIQUE,
    FOREIGN KEY (role_id) REFERENCES roles(id)
);

-- Tabela para permissões (permissions)
CREATE TABLE IF NOT EXISTS permissions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT UNIQUE NOT NULL,
    description TEXT
);

-- Tabela para associação de papéis e permissões (role_permissions)
CREATE TABLE IF NOT EXISTS role_permissions (
    role_id INTEGER,
    permission_id INTEGER,
    PRIMARY KEY (role_id, permission_id),
    FOREIGN KEY (role_id) REFERENCES roles(id),
    FOREIGN KEY (permission_id) REFERENCES permissions(id)
);

-- Tabela para licenças (licenses)
CREATE TABLE IF NOT EXISTS licenses (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    license_key TEXT UNIQUE NOT NULL,
    start_date TEXT NOT NULL,
    end_date TEXT NOT NULL,
    is_active INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Tabela para clientes (Contabilidade)
CREATE TABLE IF NOT EXISTS Contabilidade (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    ativo INTEGER DEFAULT 1, 
    cnpj TEXT,
    nome TEXT NOT NULL,
    razaoSocial TEXT,
    email TEXT,
    phone TEXT,
	user_create INTEGER NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
	user_update INTEGER,
	date_update date,
	FOREIGN KEY (user_create) REFERENCES users (id),
	FOREIGN KEY (user_update) REFERENCES users (id)
);

-- Tabela para clientes (clients)
CREATE TABLE IF NOT EXISTS clients (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
	ativo INTEGER DEFAULT 1,
	status_envio TEXT CHECK (status_envio IN ('Enviado', 'Não Enviado', 'Erro na geração', 'Não fez Venda')) DEFAULT 'Não Enviado',
    nome TEXT NOT NULL,
	razaoSocial TEXT,
    cnpj TEXT UNIQUE NOT NULL,
    email TEXT,
	id_contador INTEGER NOT NULL,
	sistema TEXT CHECK(sistema IN ('Hiper', 'Vr System', 'Digisat', 'Velo', 'STI3')) NOT NULL,
	link_sistema TEXT,
	user_sistema TEXT,
	senha_sistema TEXT,
	user_create INTEGER NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
	user_update INTEGER,
	date_update date,
	FOREIGN KEY (id_contador) REFERENCES Contabilidade(id)
	FOREIGN KEY (user_create) REFERENCES users (id),
	FOREIGN KEY (user_update) REFERENCES users (id)
);


-- Tabela para clientes (clients)
CREATE TABLE IF NOT EXISTS historico_envio_arquivos_fiscais (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
	ativo INTEGER,
	status_envio TEXT NOT NULL,
    nome TEXT NOT NULL,
	razaoSocial TEXT,
    cnpj TEXT,
    email TEXT,
	id_contador INTEGER,
	sistema TEXT ,
	link_sistema TEXT,
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
	user_update INTEGER,

);